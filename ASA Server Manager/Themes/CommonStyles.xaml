<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:system="clr-namespace:System;assembly=System.Runtime">

    <!-- Font Sizes -->
    <system:Double x:Key="NormalFontSize">16</system:Double>
    <system:Double x:Key="LargeFontSize">24</system:Double>
    <system:Double x:Key="ExtraLargeFontSize">36</system:Double>

    <Style TargetType="{x:Type Window}">
        <Setter Property="FontSize" Value="{DynamicResource LargeFontSize}" />
        <Setter Property="Icon" Value="pack://application:,,,/ASM.ico" />
    </Style>

    <!-- Colours -->
    <LinearGradientBrush x:Key="SelectedRowBackgroundBrush" StartPoint="0,0" EndPoint="0,1">
        <GradientStop Color="LightBlue" Offset="0.0" />
        <GradientStop Color="LightSkyBlue" Offset="1.0" />
    </LinearGradientBrush>

    <SolidColorBrush x:Key="SelectedRowForegroundBrush" Color="Black"/>

    <!-- Styles -->
    <Style TargetType="Button">
        <Setter Property="FontSize" Value="{DynamicResource NormalFontSize}" />

        <Style.Resources>
            <Style TargetType="Border">
                <Setter Property="CornerRadius" Value="5" />
            </Style>
        </Style.Resources>

    </Style>

    <Style TargetType="CheckBox">
        <Setter Property="FontSize" Value="{DynamicResource NormalFontSize}" />
        <Setter Property="Width" Value="20" />
        <Setter Property="Height" Value="20" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="CheckBox">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>

                        <Image x:Name="UncheckedImage" Grid.Column="0" Source="/Resources/Icons/Checkbox_Unchecked.png" />
                        <Image x:Name="CheckedImage" Grid.Column="0" Source="/Resources/Icons/Checkbox_Checked.png" Visibility="Collapsed" />
                        <Image x:Name="IndeterminateImage" Grid.Column="0" Source="/Resources/Icons/Checkbox_Indeterminate.png" Visibility="Collapsed" />

                        <ContentPresenter Grid.Column="1" Content="{TemplateBinding Content}" />

                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="CheckedImage" Property="Visibility" Value="Visible" />
                            <Setter TargetName="UncheckedImage" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="{x:Null}">
                            <Setter TargetName="IndeterminateImage" Property="Visibility" Value="Visible" />
                            <Setter TargetName="UncheckedImage" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

    </Style>

    <Style x:Key="ToggleCheckBoxStyleRedBlue" TargetType="CheckBox">
        <Setter Property="Width" Value="35" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="CheckBox">
                    <Grid>
                        <Image x:Name="OffImage" Source="/Resources/Icons/Toggle_Off_Red.png" Stretch="UniformToFill" />
                        <Image x:Name="OnImage" Source="/Resources/Icons/Toggle_On_Blue.png" Stretch="UniformToFill" Visibility="Collapsed" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="OnImage" Property="Visibility" Value="Visible" />
                            <Setter TargetName="OffImage" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ToggleCheckBoxStyleBlue" TargetType="CheckBox">
        <Setter Property="Width" Value="35" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="CheckBox">
                    <Grid>
                        <Image x:Name="OffImage" Source="/Resources/Icons/Toggle_Off_Gray.png" Stretch="UniformToFill" />
                        <Image x:Name="OnImage" Source="/Resources/Icons/Toggle_On_Blue.png" Stretch="UniformToFill" Visibility="Collapsed" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="OnImage" Property="Visibility" Value="Visible" />
                            <Setter TargetName="OffImage" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ToggleCheckBoxStyleGreen" TargetType="CheckBox">
        <Setter Property="Width" Value="35" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="CheckBox">
                    <Grid>
                        <Image x:Name="OffImage" Source="/Resources/Icons/Toggle_Off_Gray.png" Stretch="UniformToFill" />
                        <Image x:Name="OnImage" Source="/Resources/Icons/Toggle_On_Green.png" Stretch="UniformToFill" Visibility="Collapsed" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="OnImage" Property="Visibility" Value="Visible" />
                            <Setter TargetName="OffImage" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ToggleCheckBoxStyleRedGreen" TargetType="CheckBox">
        <Setter Property="Width" Value="35" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="CheckBox">
                    <Grid>
                        <Image x:Name="OffImage" Source="/Resources/Icons/Toggle_Off_Red.png" Stretch="UniformToFill" />
                        <Image x:Name="OnImage" Source="/Resources/Icons/Toggle_On_Green.png" Stretch="UniformToFill" Visibility="Collapsed" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="OnImage" Property="Visibility" Value="Visible" />
                            <Setter TargetName="OffImage" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="TextBlock">
        <Setter Property="FontSize" Value="{DynamicResource NormalFontSize}" />
    </Style>

    <Style TargetType="TextBox">
        <Setter Property="FontSize" Value="{DynamicResource NormalFontSize}" />
    </Style>

    <Style TargetType="GroupBox">
        <Setter Property="BorderBrush" Value="#d5dfe5" />
        <Setter Property="BorderThickness" Value="2" />
        <Setter Property="FontSize" Value="{DynamicResource NormalFontSize}" />
    </Style>

    <Style TargetType="Expander">
        <Setter Property="BorderBrush" Value="#d5dfe5" />
        <Setter Property="BorderThickness" Value="2" />
        <Setter Property="FontSize" Value="{DynamicResource NormalFontSize}" />
    </Style>

    <Style TargetType="ListView">
        <Setter Property="FontSize" Value="{DynamicResource NormalFontSize}" />
    </Style>

    <Style TargetType="DataGrid">
        <Setter Property="FontSize" Value="{DynamicResource NormalFontSize}" />
    </Style>

    <Style TargetType="Menu">
        <Setter Property="FontSize" Value="{DynamicResource NormalFontSize}" />
    </Style>

    <Style TargetType="MenuItem">
        <Setter Property="FontSize" Value="{DynamicResource NormalFontSize}" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
    </Style>

    <Style TargetType="ComboBox">
        <Setter Property="FontSize" Value="{DynamicResource NormalFontSize}" />
    </Style>

    <Style TargetType="DataGridCell">
        <Style.Triggers>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Background" Value="{StaticResource SelectedRowBackgroundBrush}" />
                <Setter Property="Foreground" Value="{StaticResource SelectedRowForegroundBrush}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="DataGridRow">
        <Style.Triggers>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Background" Value="{StaticResource SelectedRowBackgroundBrush}" />
                <Setter Property="Foreground" Value="{StaticResource SelectedRowForegroundBrush}" />
            </Trigger>
        </Style.Triggers>
    </Style>

</ResourceDictionary>